services:
  postgres:
    image: postgres:15-alpine
    container_name: tasker-postgres-prod
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-tasker}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-tasker_password}
      POSTGRES_DB: ${POSTGRES_DB:-tasker_db}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-tasker} -d ${POSTGRES_DB:-tasker_db}"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: tasker-redis-prod
    volumes:
      - redis_data:/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: tasker-backend-prod
    environment:
      DATABASE_URL: postgresql+asyncpg://${POSTGRES_USER:-tasker}:${POSTGRES_PASSWORD:-tasker_password}@postgres:5432/${POSTGRES_DB:-tasker_db}
      REDIS_URL: redis://redis:6379
      SECRET_KEY: ${SECRET_KEY}
      ACCESS_TOKEN_EXPIRE_MINUTES: ${ACCESS_TOKEN_EXPIRE_MINUTES:-30}
      REFRESH_TOKEN_EXPIRE_DAYS: ${REFRESH_TOKEN_EXPIRE_DAYS:-7}
      FRONTEND_URL: ${FRONTEND_URL:-http://localhost:3000}
      BACKEND_URL: ${BACKEND_URL:-http://localhost:8000}
      ENVIRONMENT: production
      DEBUG: "false"
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: tasker-frontend-prod
    environment:
      VITE_API_URL: ${BACKEND_URL:-http://localhost:8000}
    ports:
      - "3000:80"
    depends_on:
      - backend
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:
